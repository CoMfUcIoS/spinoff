---
name: publish
on:
  push:
    branches: [main]
permissions:
  actions: read
  checks: write
  contents: read
  packages: write
jobs:
  publish_functions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Get faas-cli
        run: curl -sLSf https://cli.openfaas.com | sudo sh
      - name: Pull custom templates from stack.yml
        run: faas-cli template pull stack
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get TAG
        id: get_tag
        run: echo "::set-output name=TAG::$(echo $GITHUB_SHA | cut -c 1-7)"
      - name: Docker Login
        run: >
          echo ${{secrets.DOCKERHUB_TOKEN}} |  docker login --username  ${{secrets.DOCKERHUB_USERNAME}}  --password-stdin
      - name: Set the correct docker user in controller yml
        run: >
          sed -i s/\$DOCKER_USER/${{secrets.DOCKERHUB_USERNAME}}/g stack.yml
      - name: Prebuild with shrinkwrap
        run: >
          faas-cli build --shrinkwrap
      - name: Publish functions
        run: >-
          OWNER="${{secrets.DOCKERHUB_USERNAME}}"  TAG="latest"
          faas-cli publish
          --extra-tag ${{ github.sha }}
          --build-arg GO111MODULE=on
          --platforms linux/amd64
  publish_infra-bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spinoff-infra-boostrap:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
